apiVersion: v1 # API version for the Secret resource
kind: Secret # Type of resource being created
metadata:
  name: example-secret # Name of the secret, must be unique within a namespace
  namespace: default # Namespace where the secret is created, defaults to 'default' if not specified
  labels:
    app: myapp # Optional labels that can be used to organize and select subsets of objects
  annotations:
    description: "Sensitive data for my application" # Non-identifying metadata annotations

type: Opaque # Type of the secret (Opaque, kubernetes.io/service-account-token, kubernetes.io/dockercfg, kubernetes.io/dockerconfigjson, kubernetes.io/basic-auth, kubernetes.io/ssh-auth, kubernetes.io/tls, bootstrap.kubernetes.io/token)

data:
  # Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The values must be base64-encoded strings.
  username: dXNlcm5hbWU= # Example key/value pair, where 'username' is the key, and 'dXNlcm5hbWU=' is the base64-encoded value of 'username'
  password: cGFzc3dvcmQ= # Another key/value pair, 'password' as the key and its base64-encoded value

# StringData is an alternative to 'data' that allows you to write secrets as plaintext (not base64-encoded). If both Data and StringData are specified, StringData is merged into Data.
stringData:
  config.yaml: |
    apiUrl: "https://api.example.com"
    apiKey: "abcdef12345"

# Immutable, if set to true, ensures that the secret cannot be updated (only applicable in Kubernetes 1.21+)
immutable: false

